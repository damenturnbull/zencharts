////////////////////////////////////////////////////////////////////////////////
// Custom Sass Mixins
// --------------------
// This file contains custom Sass mixins and functions. It will be included 
// in any files that import the "base" partial. To use a mixin from this 
// file, add this line to the top of your .scss file:
//   @import "base";
// Then to use a mixin for a particular rule, add this inside the ruleset's
// curly brackets:
//   @include mix-in-name;
////////////////////////////////////////////////////////////////////////////////

//
// Debugging
////////////////////////////////////////

@mixin debug-margins  { margin: 20px 0px; }
@mixin debug1         { background-color: #fdc689; }
@mixin debug2         { background-color: #eaeaea; }
@mixin debug3         { background-color: #7accc8; }
@mixin debug4         { background-color: #c4df9b; }
@mixin debug5         { background-color: #a186be; }

.debug1 { @include debug1(); }
.debug2 { @include debug2(); }
.debug3 { @include debug3(); }
.debug4 { @include debug4(); }
.debug5 { @include debug5(); }

//
// Custom Mixins
////////////////////////////////////////

@mixin size($width, $height) {
  width:  $width;
  height: $height;
}

@mixin square($width) {
  @include size($width, $width);
}

@mixin font-line($font-size: 16px, $line-height: 20px) {
  font-size: $font-size;
  line-height: $line-height;
}

@mixin border-radius($radius: 0px 0px 0px 0px) {
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  border-radius: $radius; 
}

//
// REM sizing
///////////////////////////////////

@mixin font-size($sizeValue: 1.6, $line: $sizeValue * 1.2){
  font-size: ($sizeValue * 1) + px;
  line-height: ($line * 1) + px;
  font-size: ($sizeValue / 10) + rem;
  line-height: ($line / 10) + rem;
}

@mixin pad-size($sizeValue: 1){
  padding: ($sizeValue * 1) + px;
  padding: ($sizeValue / 10) + rem;
}
// Breakpoint mixin
@mixin breakpoint($max, $min:'') {
  @if ($min!='') {
    @media only screen and (min-width: $min) and (max-width: $max) { @content; }
  } @else {
    @media only screen and (max-width: $max) { @content; }
  }
}

// Min width
@mixin break-min($min) {
  @media only screen and (min-width: $min) { @content; }
}

@mixin break-max($min) {
  $max: $min - 1;
  @media only screen and (max-width: $max) { @content; }
}

// Hide element visually, but have it available for screenreaders.
@mixin element-invisible {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute !important;
  width: 1px;
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static !important;
  width: auto;
}

// Hide element visually, but have it available for screenreaders 
// and make it focusable
@mixin element-invisible-focusable {
  @include element-invisible;
  &:active,
  &:focus { // Allow the element to be focusable when navigated to via the keyboard: h5bp.com/p
    @include element-invisible-off;
  }
}

// Clearfix to contain floats: h5bp.com/q
@mixin my-clearfix {
  &:before { // prevent top margin colapse
    content: "";
    display: table;
  }
}

// Float element left with margins
@mixin my-float-left {
  margin: 0 10px 5px 0;
}

// Float element right with margins
@mixin my-float-right {
  margin: 0 0 5px 10px;
}

// Box sizing
@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}